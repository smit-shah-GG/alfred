[project]
name = "alfred"
version = "0.1.0"
description = "AI-powered file organization system with personality"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "Smit Shah", email = "johannschmidt045@proton.me" }
]
keywords = ["ai", "file-organization", "automation", "gemini"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Desktop Environment :: File Managers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Google AI/ML
    "google-generativeai>=0.8.0",

    # File type detection and handling
    "python-magic>=0.4.27",
    "pillow>=10.0.0",
    "pypdf2>=3.0.0",
    "python-docx>=0.8.11",
    "openpyxl>=3.1.2",

    # Web UI
    "streamlit>=1.40.0",
    "streamlit-extras>=0.4.0",

    # Background service and system tray
    "watchdog>=3.0.0",
    "pystray>=0.19.5",

    # Utilities
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "rich>=13.5.0",
    "click>=8.1.0",

    # Async support
    "aiofiles>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",  # Fast linter, alternative to flake8
    "mypy>=1.5.0",
    "ipython>=8.12.0",  # Better REPL for development
]

cloud = [
    "google-cloud-storage>=2.10.0",
]

api = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
]

[project.scripts]
alfred = "src.main:main"
alfred-test-utils = "scripts.test_utils:main"
alfred-init = "scripts.init_alfred:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py310"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
    "PT",  # flake8-pytest-style
]
ignore = ["E501"]  # line too long

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short"

[tool.uv]
preview = true
